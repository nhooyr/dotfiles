[[ -f /etc/profile ]] && . /etc/profile
[[ -f /etc/zshrc ]] && . /etc/zshrc

ls() {
	gls --indicator-style=classify --color=auto "$@"
}

RESET_LS_COLORS='rs=00:di=00:ln=00:mh=00:pi=00:so=00:do=00:bd=00:cd=00:or=00:mi=00:su=00:sg=00:ca=00:tw=00:ow=00:st=00:ex=00:*.tar=00:*.tgz=00:*.arc=00:*.arj=00:*.taz=00:*.lha=00:*.lz4=00:*.lzh=00:*.lzma=00:*.tlz=00:*.txz=00:*.tzo=00:*.t7z=00:*.zip=00:*.z=00:*.dz=00:*.gz=00:*.lrz=00:*.lz=00:*.lzo=00:*.xz=00:*.zst=00:*.tzst=00:*.bz2=00:*.bz=00:*.tbz=00:*.tbz2=00:*.tz=00:*.deb=00:*.rpm=00:*.jar=00:*.war=00:*.ear=00:*.sar=00:*.rar=00:*.alz=00:*.ace=00:*.zoo=00:*.cpio=00:*.7z=00:*.rz=00:*.cab=00:*.wim=00:*.swm=00:*.dwm=00:*.esd=00:*.jpg=00:*.jpeg=00:*.mjpg=00:*.mjpeg=00:*.gif=00:*.bmp=00:*.pbm=00:*.pgm=00:*.ppm=00:*.tga=00:*.xbm=00:*.xpm=00:*.tif=00:*.tiff=00:*.png=00:*.svg=00:*.svgz=00:*.mng=00:*.pcx=00:*.mov=00:*.mpg=00:*.mpeg=00:*.m2v=00:*.mkv=00:*.webm=00:*.ogm=00:*.mp4=00:*.m4v=00:*.mp4v=00:*.vob=00:*.qt=00:*.nuv=00:*.wmv=00:*.asf=00:*.rm=00:*.rmvb=00:*.flc=00:*.avi=00:*.fli=00:*.flv=00:*.gl=00:*.dl=00:*.xcf=00:*.xwd=00:*.yuv=00:*.cgm=00:*.emf=00:*.ogv=00:*.ogx=00:*.aac=00:*.au=00:*.flac=00:*.m4a=00:*.mid=00:*.midi=00:*.mka=00:*.mp3=00:*.mpc=00:*.ogg=00:*.ra=00:*.wav=00:*.oga=00:*.opus=00:*.spx=00:*.xspf=00:'
# For zsh compinit my colors must be before the reset colors. Afterwards, the opposite for ls.
MY_LS_COLORS="di=34:ln=35:so=32:pi=32:ex=31;01"
export LS_COLORS="$MY_LS_COLORS:$RESET_LS_COLORS"

# The following lines were added by compinstall

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _complete _ignored _correct _approximate
zstyle ':completion:*' expand suffix
zstyle ':completion:*' ignore-parents parent pwd .. directory
zstyle ':completion:*' list-suffixes true
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zstyle ':completion:*' max-errors 1
zstyle ':completion:*' menu yes select
zstyle ':completion:*' original false
zstyle ':completion:*' select-prompt '%S--%p--%s'
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}

# Always group completions.
zstyle ':completion:*' group-name ''
# Sets the format for completion list descriptions like group names.
zstyle ':completion:*' format '%F{magenta}-- %d --%f'

autoload -Uz compinit
compinit

export LS_COLORS="$RESET_LS_COLORS:$MY_LS_COLORS"

# End of lines added by compinstall
# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000
setopt appendhistory autocd beep extendedglob notify
bindkey -e
# End of lines configured by zsh-newuser-install

# https://bbs.archlinux.org/viewtopic.php?id=175388
zstyle ':completion:*' rehash true

# https://stackoverflow.com/questions/444951/zsh-stop-backward-kill-word-on-directory-delimiter
autoload -U select-word-style
select-word-style bash

source /Users/nhooyr/src/nhooyr/dotfiles/zsh/prompt

# https://superuser.com/questions/71857/change-the-output-format-of-zshs-time
TIMEFMT=$'\nreal\t%*E\nuser\t%*U\nsys\t%*S'

export EDITOR='subl -wn'
export PAGER='ansifilter | subl -wn'

set -o pipefail

tabs -4

# BASHRC_DIR="$(dirname "$(realpath "$BASH_SOURCE")")"

# source "${BASHRC_DIR}/prompt"

add_path() {
	if [[ $PATH != *${1}:* ]]; then
		PATH="${1}:${PATH}"
	fi
}

GLOBIGNORE=".:.."
HISTSIZE=100000
HISTTIMEFORMAT='%F %T '

export EDITOR='subl -wn'
export MANWIDTH=80
export PAGER='ansifilter | subl -wn'
export GIT_PAGER=less
export GOPATH=~/.local/share/gopath
add_path /usr/local/opt/ruby/
add_path /usr/local/lib/ruby/gems/2.6.0/bin
add_path "${GOPATH}/bin"
add_path ~/src/nhooyr/dotfiles/bin

alias sudo='sudo '

# Occasionally random things give me errors because the default limit is so low.
ulimit -n 8192

alias r="source ~/.zshrc"
alias s="subl -n"
alias gol="goland"

alias l="ls -lh"
alias ll="ls -lhA"
alias e="$EDITOR"
alias ec="e ~/.zshrc"

source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc

alias grep="grep --color"

# https://superuser.com/questions/1067801/ctrlr-in-shell-if-i-go-past-the-command-i-want-how-do-i-get-back-to-it
stty -ixon

cd() {
	if [[ $# == 0 ]]; then
		pushd ~ > /dev/null
		return
	fi
	pushd "$@" > /dev/null
}

pd() {
	popd "$@" > /dev/null
}

mcd() {
	mkdir -p "$@"
	cd "$@"
}

gcd() {
	cd "$(git rev-parse --show-toplevel)"
}

add_cdpath() {
	if [[ ! $CDPATH ]]; then
		CDPATH=$1
		return
	fi

	if [[ $CDPATH != *${1}:* ]]; then
		CDPATH="${CDPATH}:${1}"
	fi
}

add_cdpath .
add_cdpath ~/src/nhooyr/dotfiles
add_cdpath ~/src/nhooyr
add_cdpath ~/src/cdr
add_cdpath ~/src/codercom
add_cdpath ~/src/play
add_cdpath ~/src

alias gs="git status"
alias g="git"
alias gi="git init"
alias ga="git add"
alias gcm="git commit -v"
alias gcma="git commit -v --amend"
alias gcmf="git commit -v --fixup"
alias gb="git branch"
alias grb="git rebase"
alias gps="git push"
alias gpf="git push --force"
alias gd="git diff"
alias gdc="git diff --cached"
alias gl="git log"
alias gpr="git pull-request"
alias gcl="git clone"
alias gpl="git pull"
alias gch="git checkout"

alias md="mkdir -p"
alias gh="github"
alias pc="pbcopy"
alias pp="pbpaste"
alias up="cd .."
alias vim="nvim"
alias y="yarn"
alias npm="echo use yarn"
alias grt="git reset"
alias git="hub"
alias gst="git stash"
alias gsh="git show"

alias rh="history -r"

tra() {
	local file=$(realpath "$1")
	osascript -e "tell application \"Finder\" to delete POSIX file \"$file\"" > /dev/null
}

alias bu='brew update && brew upgrade && brew cask upgrade'

github() {
	local branch
	branch=$(git rev-parse --abbrev-ref HEAD)
	if [[ ! $branch ]]; then
		return
	fi

	local url
	url=$(hub pr list -f "%U%n" -h fixes)

	# First URL in case multiple PR's use the same branch.
	url=${url[0]}

	if [[ ! $url ]]; then
		url=$(hub browse -u)
	fi

	python -mwebbrowser "$url" > /dev/null
}

ghd() {
	mkdir -p "$HOME/src/$1" &&
	git clone --recursive "https://github.com/$1" "$HOME/src/$1"
	cd "$HOME/src/$1"
}

alias icloud="cd ~/Library/Mobile\ Documents/com~apple~CloudDocs"

# https://unix.stackexchange.com/a/97844/109885
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end

# Will never insert prefixes for ambigous completion, will list first instead.
setopt LIST_AMBIGUOUS
setopt LIST_TYPES

# http://leetschau.github.io/remove-duplicate-zsh-history.html
setopt EXTENDED_HISTORY
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_BEEP
setopt HIST_SAVE_NO_DUPS 

# https://opensource.com/article/18/9/tips-productivity-zsh
setopt autocd
setopt autopushd
setopt pushdignoredups

# https://github.com/robbyrussell/oh-my-zsh/blob/078f64dcf9c56f45d1d5e9e49dd5709baedc1386/lib/termsupport.zsh#L82
# https://superuser.com/a/328148/436208
# Tell the terminal about the working directory whenever it changes.
if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]] && [[ -z "$INSIDE_EMACS" ]]; then

    update_terminal_cwd() {
        # Identify the directory using a "file:" scheme URL, including
        # the host name to disambiguate local vs. remote paths.

        # Percent-encode the pathname.
        local url_path=''
        {
            # Use LC_CTYPE=C to process text byte-by-byte. Ensure that
            # LC_ALL isn't set, so it doesn't interfere.
            local i ch hexch LC_CTYPE=C LC_ALL=
            for ((i = 1; i <= ${#PWD}; ++i)); do
                ch="$PWD[i]"
                if [[ "$ch" =~ [/._~A-Za-z0-9-] ]]; then
                    url_path+="$ch"
                else
                    printf -v hexch "%02X" "'$ch"
                    url_path+="%$hexch"
                fi
            done
        }

        printf '\e]7;%s\a' "file://$HOST$url_path"
    }

    # Register the function so it is called at each prompt.
    autoload add-zsh-hook
    add-zsh-hook precmd update_terminal_cwd
fi

unsetopt LIST_BEEP
setopt nomenucomplete

# https://stackoverflow.com/a/842370/4283659
bindkey '^[[Z' reverse-menu-complete

fpath=(/usr/local/share/zsh-completions $fpath)

source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
