#!/usr/bin/env bash

# Need to escape all non visible characters in \[ and \] to prevent
# bash from using them for the length calculations.
tput() {
	echo -n "%{$(command tput "$@")%}"
}

gen_prompt() {
	local suffix=$

	tput bold

	if [[ $USER == root ]]; then
		tput setaf 1
		suffix="$(tput setaf 1)#"
	elif [[ $USER != nhooyr ]]; then
		local user=true
		echo -n \\u
	fi

	if [[ $HOST != ien.local ]]; then
		if [[ $user ]]; then
			echo -n @
		fi
		echo -n \\h:
	elif [[ $user != "" ]]; then
		echo -n :
	fi

	echo -n %~

	branch=$(git rev-parse --abbrev-ref HEAD 2> /dev/null)
	if [[ $branch ]]; then
		echo -n :
		tput setaf 4
		echo -n "$branch"

		if [[ $(git status --porcelain) ]]; then
			tput setaf 6
			echo -n "*"
		fi

		# git stash list takes 100ms for some reason. git status is very fast.
		if [[ $(git status --show-stash) == *"Your stash currently has"* ]]; then
			tput setaf 2
			echo -n "&"
		fi

		tput sgr0
	fi

	echo
	tput bold
	echo -n "$suffix"
	tput sgr0
	echo ' '
}

prompt_cmd() {
	# We explicitly need to set PS1 to the result of prompt_cmd for escapes to be
	# handled correctly. See http://tldp.org/HOWTO/Bash-Prompt-HOWTO/bash-prompt-escape-sequences.html
	PS1=$(gen_prompt)
}

# https://www.gnu.org/software/bash/manual/html_node/Bash-Variables.html
PROMPT_DIRTRIM=10

setopt PROMPT_SUBST
precmd_functions+=(prompt_cmd)
