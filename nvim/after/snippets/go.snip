snippet ctx
options word
  context.Context

snippet ctxa
options word
  ctx context.Context

snippet bg
options word
  context.Background()

snippet ctxc
options head
  ctx, cancel := context.WithCancel(ctx)

snippet ctxt
options head
  ctx, cancel := context.WithTimeout(ctx, ${1:timeout})

snippet ctxv
options head
  ctx := context.WithValue(ctx, ${1:key}, ${2:value})

snippet httpfn
options word
  http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
    $0
  })

snippet closure
options word
  func($0) {
    $1
  }

snippet debug
options word
  println("\033[1;31m--- DEBUG:", $0, "\033[m")

snippet debugf
options word
  println(fmt.Sprintf("\033[1;31m--- DEBUG: %s\033[m", func(v ...interface{}) string { s := ""; for _, p := range v { s += fmt.Sprintf("%#v; ", p) }; return s }($0)))

snippet panicf
options word
  panic(fmt.Sprintf("$0"))

snippet main
options head
	func main() {
		$0
	}

snippet json
	\`json:"${1:keyName}"\`

snippet tcs
	testCases := []struct{
		name string
	}{
		{},
	}

	for _, tc := range testCases {
		tc := tc
		t.Run(tc.name, func(t *testing.T) {
			t.Parallel()

			$0
		})
	}

snippet ife
options head
    if err != nil {
      $0
    }

snippet debugj
	b, _ := json.Marshal($0)
	println("\033[1;31m--- DEBUG:", string(b), "\033[m")
